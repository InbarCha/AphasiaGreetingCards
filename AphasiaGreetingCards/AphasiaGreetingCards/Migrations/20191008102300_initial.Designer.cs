// <auto-generated />
using System;
using AphasiaGreetingCards.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AphasiaGreetingCards.Migrations
{
    [DbContext(typeof(AphasiaGreetingCardsContext))]
    [Migration("20191008102300_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AphasiaGreetingCards.Models.GreetingCard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fullSentence");

                    b.Property<string>("image");

                    b.Property<int>("imageID");

                    b.Property<bool>("publishedToFacebook");

                    b.Property<string>("recipientUserFullName");

                    b.Property<int>("recipientUserID");

                    b.Property<string>("senderUserFullName");

                    b.Property<int>("sendertUserID");

                    b.Property<int>("sentenceID");

                    b.Property<string>("theme");

                    b.HasKey("ID");

                    b.ToTable("GreetingCards");
                });

            modelBuilder.Entity("AphasiaGreetingCards.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("digitalSize");

                    b.Property<string>("imagePath");

                    b.Property<string>("resolution");

                    b.Property<string>("theme");

                    b.HasKey("ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AphasiaGreetingCards.Models.SentimentSentence", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("complexity");

                    b.Property<string>("prefix");

                    b.Property<string>("recipientUserFullName");

                    b.Property<int>("recipientUserID");

                    b.Property<string>("suffix");

                    b.Property<string>("theme");

                    b.HasKey("ID");

                    b.ToTable("SentimentSentences");
                });

            modelBuilder.Entity("AphasiaGreetingCards.Models.User", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int?>("UserID");

                    b.Property<int>("age");

                    b.Property<DateTime>("birthdayDate");

                    b.Property<string>("city");

                    b.Property<string>("firstName");

                    b.Property<bool>("isManager");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<string>("username");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AphasiaGreetingCards.Models.User", b =>
                {
                    b.HasOne("AphasiaGreetingCards.Models.User")
                        .WithMany("Friends")
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
